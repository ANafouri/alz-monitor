
name: Deploy ALZ in HUB Networking configuration

# only trigger on pull request closed events
on:
  workflow_dispatch: {}

permissions:
      id-token: write
      contents: read

env:
  Location: "norwayeast"
  ManagementGroupPrefix: "hubnw"

  
jobs:
  close_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # - name: Azure Login
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.ALZ_AZURE_SECRET_UNIT_TESTS }}
    #     enable-AzPSSession: true

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      
    - task: Bash@3     
      displayName: Az CLI Deploy Management Groups for PR
      name: create_mgs
      inputs:
        targetType: 'inline'
        script: |
            az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters @infra-as-code/bicep/modules/managementGroups/parameters/managementGroups.parameters.all.json parTopLevelManagementGroupPrefix=$(ManagementGroupPrefix) --location $(Location) --name $(ManagementGroupPrefix)

    # - name: Remove existing Resource Groups in PR associated Azure Subscription
    #   if: ${{ env.subscriptionId != '' }}
    #   shell: pwsh
    #   run: |
    #     Select-AzSubscription -SubscriptionId ${{ env.subscriptionId }} 
    #     $resourceGroups = @()
    #     $resourceGroups += Get-AzResourceGroup
    #     $resourceGroups | Select-Object -Property ResourceGroupName
    #     If ($resourceGroups.Count -gt 0) {
    #         $resourceGroups | ForEach-Object -Parallel {
    #             Write-Information "==>Deleting resource group $($PSItem.ResourceGroupName)"
    #             Remove-AzResourceGroup -Name $PSItem.ResourceGroupName -Force
    #         }
    #     }

    # - name: Cancel PR associated Azure Subscription
    #   if: ${{ env.subscriptionId != '' }}
    #   shell: pwsh
    #   run: |
    #     Install-Module -Name Az.Subscription -Force
    #     Write-Information "==> PR #${{ github.event.number }} has been merged" -InformationAction Continue
    #     Write-Information "==> ${{ env.SubscriptionName }} to be deleted" -InformationAction Continue
    #     Update-AzSubscription -SubscriptionId ${{ env.subscriptionId }} -Action 'Cancel' -Debug -Confirm:$false

