{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "2593348813540598935"
    }
  },
  "parameters": {
    "policyLocation": {
      "type": "string",
      "defaultValue": "centralus"
    },
    "deploymentRoleDefinitionIds": {
      "type": "array",
      "defaultValue": [
        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-qva-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16366143784148570160"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-qva-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_DNSZ_QueryVolume_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy DNSZ Query Volume Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy DNS Zone Query Volume Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/dnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/dnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "QueryVolume"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/dnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-QueryVolume')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for DNS Zone Query Volume",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "QueryVolume",
                                            "metricNamespace": "Microsoft.Network/dnsZones",
                                            "metricName": "QueryVolume",
                                            "operator": "GreaterThanEqualTo",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-rsca-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "18317417028196785287"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-rsca-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_DNSZ_RecordSetCount_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy DNSZ Record Set Count Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy DNS Zone Record Set Count Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/dnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/dnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "RecordSetCount"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/dnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-RecordSetCount')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for DNS Zone Record Set Count",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "RecordSetCount",
                                            "metricNamespace": "Microsoft.Network/dnsZones",
                                            "metricName": "RecordSetCount",
                                            "operator": "GreaterThanEqualTo",
                                            "threshold": 2000,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-rscua-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16066067325052771210"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-rscua-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_DNSZ_ZoneRecordSetCapacityUtil_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy DNSZ Record Set Capacity Utlization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy DNS Zone Record Set Capacity Utilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/dnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/dnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "RecordSetCapacityUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/dnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-RecordSetCapacityUtilization')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for DNS Zone Record Set Count",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "RecordSetCapacityUtilization",
                                            "metricNamespace": "Microsoft.Network/dnsZones",
                                            "metricName": "RecordSetCapacityUtilization",
                                            "operator": "GreaterThanEqualTo",
                                            "threshold": 2000,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-kvca-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "11013616060837094589"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-kvca-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_KeyVault_Capacity_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy KeyVault Capacity Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy KeyVault Capacity Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Key Vault",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.keyvault/vaults"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.keyvault/vaults"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "SaturationShoebox"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-CapacityAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for KeyVault Capacity",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "SaturationShoebox",
                                            "metricNamespace": "microsoft.keyvault/vaults",
                                            "metricName": "SaturationShoebox",
                                            "operator": "GreaterThan",
                                            "threshold": 75,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-kvla-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "4395844725599936680"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-kvla-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_KeyVault_Latency_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy KeyVault Latency Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy KeyVault Latency Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Key Vault",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.keyvault/vaults"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.keyvault/vaults"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ServiceApiLatency"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-LatencyAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for KeyVault Latency",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ServiceApiLatency",
                                            "metricNamespace": "microsoft.keyvault/vaults",
                                            "metricName": "ServiceApiLatency",
                                            "operator": "GreaterThan",
                                            "threshold": 1000,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-kvqva-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "8531576706714594119"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-kva-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_KeyVault_Availability_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy KeyVault Query Volume Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy KeyVault Query Volume Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Key Vault",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.keyvault/vaults"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.keyvault/vaults"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "Availability"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-Availability')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for KeyVault Availability",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "Availability",
                                            "metricNamespace": "microsoft.keyvault/vaults",
                                            "metricName": "Availability",
                                            "operator": "LessThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-kvra-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6946179092318371402"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-kvra-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_KeyVault_Requests_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy KeyVault Requests Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy KeyVault Requests Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Key Vault",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.keyvault/vaults"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.keyvault/vaults"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ServiceApiResult"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-RequestsAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for KeyVault Requests",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ServiceApiResult",
                                            "metricNamespace": "microsoft.keyvault/vaults",
                                            "metricName": "ServiceApiResult",
                                            "operator": "GreaterThan",
                                            "threshold": 0,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pdnsvnlcu-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7585425177582928663"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pdnsvnlcu-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PDNSZ_CapacityUtil_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PDNSZ Capacity Utilization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Private DNS Zone Capacity Utilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/privateDnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/privateDnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "VirtualNetworkLinkCapacityUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-CapacityUtilizationAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Private DNS Zone Virtual Network Link Capacity Utilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1H",
                                      "windowSize": "PT1H",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "VirtualNetworkLinkCapacityUtilization",
                                            "metricNamespace": "Microsoft.Network/privateDnsZones",
                                            "metricName": "VirtualNetworkLinkCapacityUtilization",
                                            "operator": "GreaterThanOrEqual",
                                            "threshold": 80,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pdnszqv-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16716223424971363639"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pdnszqv-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PDNSZ_QueryVolume_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PDNSZ Query Volume Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Private DNS Zone Query Volume Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/privateDnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/privateDnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "QueryVolume"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-QueryVolumeAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Private DNS Query Volume",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1H",
                                      "windowSize": "PT1H",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "QueryVolume",
                                            "metricNamespace": "Microsoft.Network/privateDnsZones",
                                            "metricName": "QueryVolume",
                                            "operator": "GreaterThanOrEqual",
                                            "threshold": 500,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pdnsrsc-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16037979076467521099"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pdnsrsc-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PDNSZ_RecordSetCapacity_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PDNSZ Record Set Capacity Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Private DNS Zone Record Set Capacity Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/privateDnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/privateDnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "RecordSetCapacityUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-RecordSet_Capacity_Utilization')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Private DNS Zone Record Set Capacity Utilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1H",
                                      "windowSize": "PT1H",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "RecordSetCapacityUtilization",
                                            "metricNamespace": "Microsoft.Network/privateDnsZones",
                                            "metricName": "RecordSetCapacityUtilization",
                                            "operator": "GreaterThanOrEqual",
                                            "threshold": 75,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pdnszvnrcu-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16030964535810962638"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pdnszvnrcu-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_DNSZ_RegistrationCapacityUtil_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PDNSZ Registration Capacity Utilization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Private DNS Zone Registration Capacity Utilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/privateDnsZones"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/privateDnsZones"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "VirtualNetworkWithRegistrationCapacityUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-RequestsAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Private DNS Zone Registration Capacity Utilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1H",
                                      "windowSize": "PT1H",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "VirtualNetworkWithRegistrationCapacityUtilization",
                                            "metricNamespace": "Microsoft.Network/privateDnsZones",
                                            "metricName": "VirtualNetworkWithRegistrationCapacityUtilization",
                                            "operator": "GreaterThan",
                                            "threshold": 90,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pipbiddos-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13896084212643993561"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pipbiddos-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PublicIp_BytesInDDoSAttack_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PIP Bytes in DDoS Attack Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy PIP Bytes in DDoS Attack Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/publicIPAddresses"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/publicIPAddresses"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "bytesinddos"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-BytesInDDOSAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Public IP Address Bytes IN DDOS",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "bytesinddos",
                                            "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                            "metricName": "bytesinddos",
                                            "operator": "GreaterThan",
                                            "threshold": 8000000,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pipddosa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6077907583638623586"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pipddosa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PublicIp_DDoSAttack_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PIP DDoS Attack Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy PIP DDoS Attack Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/publicIPAddresses"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/publicIPAddresses"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ifunderddosattack"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-DDOS_Attack')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Public IP Address Under Attack",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ifunderddosattack",
                                            "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                            "metricName": "ifunderddosattack",
                                            "operator": "GreaterThan",
                                            "threshold": 1,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pippiddos-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "4510596666973000998"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pippiddos-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PublicIp_PacketsInDDoSAttack_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PIP Packets in DDoS Attack Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy PIP Packets in DDoS Attack Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/publicIPAddresses"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/publicIPAddresses"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "QueryVolume"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-QueryVolumeAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Public IP Address Packets IN DDOS",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "PacketsInDDoS",
                                            "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                            "metricName": "PacketsInDDoS",
                                            "operator": "GreaterThanEqualTo",
                                            "threshold": 40000,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-pipvipaa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13912054462386064627"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pipvipaa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_PublicIp_VIPAvailability_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy PIP VIP Availability Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy PIP VIP Availability Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/publicIPAddresses"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/publicIPAddresses"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "VipAvailability"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-VIPAvailabityAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Public IP Address VIP Availability",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "VipAvailability",
                                            "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                            "metricName": "VipAvailability",
                                            "operator": "LessThan",
                                            "threshold": 1,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-rvbuha-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13622829198637187993"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-rvbuha-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_RecoveryVault_BackupHealth_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy RV Backup Health Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Recovery Vault Backup Health Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Site Recovery",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.RecoveryServices/Vaults"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.RecoveryServices/Vaults"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "backuphealthevent"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.RecoveryServices/Vaults/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-BackupHealth')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Recovery Vault Backup Health Events",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "backuphealthevent",
                                            "metricNamespace": "Microsoft.RecoveryServices/Vaults",
                                            "metricName": "backuphealthevent",
                                            "operator": "GreaterThan",
                                            "threshold": 0,
                                            "timeAggregation": "Count",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-saaa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6022090149450438048"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-saaa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_StorageAccount_Availability_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy SA Availability Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy SA Availability Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Storage",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Storage/storageAccounts"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "Availability"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-AvailabilityAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Storage Account Availability",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "Availability",
                                            "metricNamespace": "Microsoft.Storage/storageAccounts",
                                            "metricName": "Availability",
                                            "operator": "LessThan",
                                            "threshold": 99,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-sae2ela-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16330199941321472937"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-sae2ela-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_StorageAccount_E2ELatency_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy SA E2E Latency Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy SA E2E Latency Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Storage",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Storage/storageAccounts"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "AverageE2ELatency"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-E2ELatencyAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Storage Account End to End Latency",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "AverageE2ELatency",
                                            "metricNamespace": "Microsoft.Storage/storageAccounts",
                                            "metricName": "AverageE2ELatency",
                                            "operator": "GreaterThan",
                                            "threshold": 5000,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-sassla-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7493350131252105888"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-sassla-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_StorageAccount_Latency_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy SA Latency Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy SA Latency Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Storage",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Storage/storageAccounts"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "SuccessServerLatency"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-LatencyAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Storage Account Success Server Latency",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "SuccessServerLatency",
                                            "metricNamespace": "Microsoft.Storage/storageAccounts",
                                            "metricName": "SuccessServerLatency",
                                            "operator": "GreaterThan",
                                            "threshold": 5000,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-sata-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "1885428598880931301"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-sata-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_StorageAccount_Transaction_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy SA Transaction Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy SA Transaction Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Storage",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Storage/storageAccounts"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "Transactions"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-Transactions')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Storage Account Transactions",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "Transactions",
                                            "metricNamespace": "Microsoft.Storage/storageAccounts",
                                            "metricName": "Transactions",
                                            "operator": "GreaterThan",
                                            "threshold": 1000,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vmama-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10442162504419024339"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vmama-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VM_AvailableMemory_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VM Available Memory Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VM Available Memory Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Compute",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Compute/virtualMachines"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Compute/virtualMachines"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "tunnelaveragebandwidth"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachines/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-AvailableMemoryAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Virtual Machine Available Memory (MBytes)",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "Average_AvailableMBytes",
                                            "metricNamespace": "Microsoft.Compute/virtualMachines",
                                            "metricName": "Average_Available MBytes",
                                            "operator": "LessThan",
                                            "threshold": 95,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnetddosaa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3502331978176140818"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetddosaa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VNET_DDoSAttack_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNet DDoS Attack Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network DDoS Attack Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworks"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworks"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ifunderddosattack"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-DDOSAttackAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet DDOS Attack",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ifunderddosattack",
                                            "metricNamespace": "Microsoft.Network/virtualNetworks",
                                            "metricName": "ifunderddosattack",
                                            "operator": "GreaterThanOrEqual",
                                            "threshold": 1,
                                            "timeAggregation": "Maximum",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnparta-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "17496675876571612987"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnparta-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VNET_PingAvgRoundtrip_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNet Ping Avg Roundtrip Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Ping Average Roundtrip Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworks"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworks"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "PingMeshAverageRoundtripMs"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-AverageRoundtripAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet ping Average Roundtrip Time",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "PingMeshAverageRoundtripMs",
                                            "metricNamespace": "Microsoft.Network/virtualNetworks",
                                            "metricName": "PingMeshAverageRoundtripMs",
                                            "operator": "GreaterThan",
                                            "threshold": 300,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnetpfa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "2031423282320185287"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetpfa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VNET_ProbeFailed_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNet Probe Failed Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Probe Failed Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworks"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworks"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "PingMeshProbesFailedPercent"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-ProbeFailedAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet ping mesh probe failed percentage",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "PingMeshProbesFailedPercent",
                                            "metricNamespace": "Microsoft.Network/virtualNetworks",
                                            "metricName": "PingMeshProbesFailedPercent",
                                            "operator": "GreaterThan",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vngergcpuua-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "15628825607827470052"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vngergcpuua-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VnetGw_ExpressRouteCpuUtil_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNetG ExpressRoute CPU Utilization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Gateway Express Route CPU Utilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworkGateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworkGateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ExpressRouteGatewayCpuUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-GatewayERCPUAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet Gateway Express Route CPU Utilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ExpressRouteGatewayCpuUtilization",
                                            "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                            "metricName": "ExpressRouteGatewayCpuUtilization",
                                            "operator": "GreaterThan",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnetgtaba-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7646485937699833695"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetgtaba-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VnetGw_TunnelBandwidth_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNetG Tunnel Bandwidth Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Bandwidth Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworkGateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworkGateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelAverageBandwidth"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelBandwidthAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet Gateway Tunnel Avg Bandwidth",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelAverageBandwidth",
                                            "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                            "metricName": "TunnelAverageBandwidth",
                                            "operator": "LessThan",
                                            "threshold": 1,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnetgteba-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "741064314842698154"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetgteba-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VnetGw_TunnelEgress_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNetG Tunnel Egress Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Egress Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworkGateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworkGateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelEgressBytes"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelEgressAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet Gateway Tunnel Egress Bytes",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelEgressBytes",
                                            "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                            "metricName": "TunnelEgressBytes",
                                            "operator": "LessThanOrEqual",
                                            "threshold": 1,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnetgtiba-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6662124081766516481"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetgtiba-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VnetGw_TunnelIngress_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNetG Tunnel Ingress Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Ingress Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworkGateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworkGateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelIngressBytes"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelIngressAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet Gateway Tunnel ingress Bytes",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelIngressBytes",
                                            "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                            "metricName": "TunnelIngressBytes",
                                            "operator": "LessThanOrEqual",
                                            "threshold": 1,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vnpgbgppeerstatus-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13998725115472411572"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnpgbgppeerstatus-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VnetGw_BgpPeerStatus_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VNetG BgpPeerStatus Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Virtual Network Gateway BgpPeerStatus Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/virtualNetworkGateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/virtualNetworkGateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "BgpPeerStatus"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-VnetGBgpPeerStatus')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VNet Gateway BgpPeerStatus",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "BgpPeerStatus",
                                            "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                            "metricName": "BgpPeerStatus",
                                            "operator": "LessThan",
                                            "threshold": 1,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngbua-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "360685778403110366"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngbua-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_BandwidthUtil_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG  Bandwidth Utilization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Bandwidth Utilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "tunnelaveragebandwidth"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-GatewayBandwidthAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway Bandwidth Utilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "tunnelaveragebandwidth",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "tunnelaveragebandwidth",
                                            "operator": "GreaterThan",
                                            "threshold": 1000000000,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngbgppsa-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "12895475925537269324"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngbgppsa-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_BGPPeerStatus_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG  BGP Peer Status Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway BGP Peer Status Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "bgppeerstatus"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-BGPPeerStatusAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway BGP peer status",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "bgppeerstatus",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "bgppeerstatus",
                                            "operator": "LessThan",
                                            "threshold": 1,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngtea-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "14142329857209555056"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngtea-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_Egress_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Egress Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Egress Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "tunnelegressbytes"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelEgressAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel egress bytes",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "tunnelegressbytes",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "tunnelegressbytes",
                                            "operator": "LessThanOrEqual",
                                            "threshold": 0,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngtia-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "95115376336466657"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngtia-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_Ingress_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Ingress Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Ingress Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "tunnelingressbytes"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelIngressAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel ingress bytes",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "tunnelingressbytes",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "tunnelingressbytes",
                                            "operator": "LessThanOrEqual",
                                            "threshold": 0,
                                            "timeAggregation": "Total",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngegrpacketdropcount-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "1543096744182442756"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngegresspacketdropcount-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_TunnelEgressPacketDropCount_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Egress Packet Drop Count Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Egress Packet Drop Count Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelEgressPacketDropCount"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelEgressPacketDropCountAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel TunnelEgressPacketDropCount",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelEgressPacketDropCount",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "TunnelEgressPacketDropCount",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngegrpacketdropmmatch-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "8784033149981677964"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngegresspacketdropmismatch-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Egress Packet Drop Mismatch Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Egress Packet Drop Mismatch Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelEgressPacketDropTSMismatch"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelEgressPacketDropTSMismatchAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel TunnelEgressPacketDropTSMismatch",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelEgressPacketDropTSMismatch",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "TunnelEgressPacketDropTSMismatch",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngingrpacketdropcount-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3482183511798339177"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngingresspacketdropcount-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_TunnelIngressPacketDropCount_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Ingress Packet Drop Count Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Ingress Packet Drop Count Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelIngressPacketDropCount"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelIngressPacketDropCountAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel TunnelIngressPacketDropCount",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelIngressPacketDropCount",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "TunnelIngressPacketDropCount",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-vpngingrpacketdropmmtch-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3134104489793058834"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vpngingresspacketdropmismatch-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy VPNG Ingress Packet Drop Mismatch Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy VPN Gateway Ingress Packet Drop Mismatch Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "microsoft.network/vpngateways"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "microsoft.network/vpngateways"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TunnelIngressPacketDropTSMismatch"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TunnelIngressPacketDropTSMismatchAlert')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for VPN Gateway tunnel TunnelIngressPacketDropTSMismatch",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TunnelIngressPacketDropTSMismatch",
                                            "metricNamespace": "microsoft.network/vpngateways",
                                            "metricName": "TunnelIngressPacketDropTSMismatch",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-ercirarpav-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7664336315557513343"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ercirarpav-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_ERCIR_ArpAvailability_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy ExpressRoute Circuits Arp Availability Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy ExpressRoute Circuits Arp Availability Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/expressRouteCircuits"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/expressRouteCircuits"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "ArpAvailability"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-ArpAvailability')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for ExpressRoute Circuit Arp Availability",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "ArpAvailability",
                                            "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                            "metricName": "ArpAvailability",
                                            "operator": "LessThan",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-ercirbgpav-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "11743564947130016928"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ercirbgpav-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_ERCIR_BgpAvailability_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy ExpressRoute Circuits Bgp Availability Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy ExpressRoute Circuits Bgp Availability Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/expressRouteCircuits"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/expressRouteCircuits"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "BgpAvailability"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-BgpAvailability')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for ExpressRoute Circuit Bgp Availability",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "BgpAvailability",
                                            "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                            "metricName": "BgpAvailability",
                                            "operator": "LessThan",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-ercirqosdropsin-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7307134484082390192"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-erqosdropsin-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_ERCIR_QosDropBitsInPerSecond_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy ExpressRoute Circuits QosDropBitsInPerSecond Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy ExpressRoute Circuits QosDropBitsInPerSecond Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/expressRouteCircuits"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/expressRouteCircuits"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "QosDropBitsInPerSecond"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-QosDropBitsInPerSecond')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for ExpressRoute Circuit QosDropBitsInPerSecond",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "QosDropBitsInPerSecond",
                                            "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                            "metricName": "QosDropBitsInPerSecond",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-ercirqosdropsout-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10175028496965052021"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-erqosdropsout-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_ERCIR_QosDropBitsOutPerSecond_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy ExpressRoute Circuits QosDropBitsOutPerSecond Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy ExpressRoute Circuits QosDropBitsOutPerSecond Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/expressRouteCircuits"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/expressRouteCircuits"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "QosDropBitsOutPerSecond"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-QosDropBitsOutPerSecond')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for ExpressRoute Circuit QosDropBitsOutPerSecond",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT1M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "QosDropBitsOutPerSecond",
                                            "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                            "metricName": "QosDropBitsOutPerSecond",
                                            "operator": "GreaterThan",
                                            "threshold": 100,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-aatotaljob-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "2540293136748031680"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-aatotaljob-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_AA_TotalJob_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy Automation Account TotalJob Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Automation Account TotalJob Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Automation/automationAccounts"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Automation/automationAccounts"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "TotalJob"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Automation/automationAccounts/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-TotalJob')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for Automation Account TotalJob Alert",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "TotalJob",
                                            "metricNamespace": "Microsoft.Automation/automationAccounts",
                                            "metricName": "TotalJob",
                                            "dimensions": [
                                              {
                                                "name": "Status",
                                                "operator": "Exclude",
                                                "values": [
                                                  "Completed"
                                                ]
                                              }
                                            ],
                                            "operator": "GreaterThanEqualTo",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-afwfirewallhealth-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3272174886757083795"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-afwfirewallhealth-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_AFW_FirewallHealth_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy AFW FirewallHealth Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Azure Firewall FirewallHealth Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/azureFirewalls"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/azureFirewalls"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "FirewallHealth"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/azureFirewalls/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-FirewallHealth')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for AFW FirewallHealth",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "FirewallHealth",
                                            "metricNamespace": "Microsoft.Network/azureFirewalls",
                                            "metricName": "FirewallHealth",
                                            "operator": "LessThan",
                                            "threshold": 90,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-afwsnatportutilization-policyDefinitions-deploy', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentRoleDefinitionIds": {
            "value": "[parameters('deploymentRoleDefinitionIds')]"
          },
          "policyLocation": {
            "value": "[parameters('policyLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "1161393145835658063"
            }
          },
          "parameters": {
            "policyLocation": {
              "type": "string",
              "defaultValue": "centralus"
            },
            "deploymentRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-afwsnatportutilization-policyDefinitions', uniqueString(deployment().name))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "Deploy_AFW_SNATPortUtilization_Alert"
                  },
                  "displayName": {
                    "value": "[DINE] Deploy AFW SNATPortUtilization Alert"
                  },
                  "description": {
                    "value": "DINE policy to audit/deploy Azure Firewall SNATPortUtilization Alert"
                  },
                  "location": {
                    "value": "[parameters('policyLocation')]"
                  },
                  "metadata": {
                    "value": {
                      "version": "1.0.0",
                      "Category": "Networking",
                      "source": "https://github.com/Azure/ALZ-Monitor/"
                    }
                  },
                  "policyRule": {
                    "value": {
                      "if": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Network/azureFirewalls"
                          }
                        ]
                      },
                      "then": {
                        "effect": "deployIfNotExists",
                        "details": {
                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                          "type": "Microsoft.Insights/metricAlerts",
                          "existenceCondition": {
                            "allOf": [
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                "equals": "Microsoft.Network/azureFirewalls"
                              },
                              {
                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                "equals": "SNATPortUtilization"
                              },
                              {
                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/azureFirewalls/', field('fullName'))]"
                              }
                            ]
                          },
                          "deployment": {
                            "properties": {
                              "mode": "incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                  "resourceName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceName",
                                      "description": "Name of the resource"
                                    }
                                  },
                                  "resourceId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "resourceId",
                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                    }
                                  }
                                },
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Insights/metricAlerts",
                                    "apiVersion": "2018-03-01",
                                    "name": "[[concat(parameters('resourceName'), '-SNATPortUtilization')]",
                                    "location": "global",
                                    "properties": {
                                      "description": "Metric Alert for AFW SNATPortUtilization",
                                      "severity": 3,
                                      "enabled": true,
                                      "scopes": [
                                        "[[parameters('resourceId')]"
                                      ],
                                      "evaluationFrequency": "PT5M",
                                      "windowSize": "PT5M",
                                      "criteria": {
                                        "allOf": [
                                          {
                                            "name": "SNATPortUtilization",
                                            "metricNamespace": "Microsoft.Network/azureFirewalls",
                                            "metricName": "SNATPortUtilization",
                                            "operator": "GreaterThan",
                                            "threshold": 80,
                                            "timeAggregation": "Average",
                                            "criterionType": "StaticThresholdCriterion"
                                          }
                                        ],
                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                      }
                                    }
                                  }
                                ]
                              },
                              "parameters": {
                                "resourceName": {
                                  "value": "[[field('name')]"
                                },
                                "resourceId": {
                                  "value": "[[field('id')]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4253137932837702667"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "",
                      "maxLength": 128,
                      "metadata": {
                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The policy definition description."
                      }
                    },
                    "mode": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Indexed",
                        "Microsoft.KeyVault.Data",
                        "Microsoft.ContainerService.Data",
                        "Microsoft.Kubernetes.Data"
                      ],
                      "metadata": {
                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                      }
                    },
                    "policyRule": {
                      "type": "object",
                      "metadata": {
                        "description": "Required. The Policy Rule details for the Policy Definition."
                      }
                    },
                    "managementGroupId": {
                      "type": "string",
                      "defaultValue": "[managementGroup().name]",
                      "metadata": {
                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]",
                      "metadata": {
                        "description": "Optional. Location deployment metadata."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "properties": {
                        "policyType": "Custom",
                        "mode": "[parameters('mode')]",
                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                        "policyRule": "[parameters('policyRule')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "Policy Definition Name."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
                      "metadata": {
                        "description": "Policy Definition resource ID."
                      }
                    },
                    "roleDefinitionIds": {
                      "type": "array",
                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
                      "metadata": {
                        "description": "Policy Definition Role Definition IDs."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  ]
}