{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "12070381922674468861"
    }
  },
  "parameters": {
    "parTargetManagementGroupId": {
      "type": "string",
      "defaultValue": "alz",
      "metadata": {
        "description": "The management group scope to which the policy definitions are to be created at. DEFAULT VALUE = \"alz\""
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_DNSZ_QueryVolume_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_QueryVolume_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy DNSZ Query Volume Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_DNSZ_QueryVolume"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy DNS Zone Query Volume Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_DNSZ_RecordSetCount_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RecordSetCount_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy DNSZ Record Set Count Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_DNSZ_RecordSetCo"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy DNS Zone Record Set Count Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_DNSZ_ZoneRecordSetCapacityUtil_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_ZoneRecordSetCapacityUtil_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy DNSZ Record Set Capacity Utilization Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_DNSZ_ZoneRecordS"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy DNS Zone Record Set Capacity Utilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_KeyVault_Availability_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy KeyVault Availability Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_KeyVault_Avail"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy KeyVault Availability Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_KeyVault_Capacity_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy KeyVault Capacity Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_KeyVault_Capacit"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy KeyVault Capacity Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_KeyVault_Latency_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy KeyVault Latency Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_KeyVault_Latency"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy KeyVault Latency Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_KeyVault_Requests_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy KeyVault Requests Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_KeyVault_Request"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy KeyVault Requests Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PDNSZ_RecordSetCapacity_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_RecordSetCapacity_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PDNSZ Record Set Capacity Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PDNSZ_RecordSetC"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Private DNS Zone Record Set Capacity Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PDNSZ_CapacityUtil_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_CapacityUtil_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PDNSZ Capacity Utilization Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PDNSZ_CapacityUt"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Private DNS Zone Capacity Utilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PDNSZ_QueryVolume_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_QueryVolume_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PDNSZ Query Volume Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PDNSZ_QueryVolum"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Private DNS Zone Query Volume Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_DNSZ_RegistrationCapacityUtil_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RegistrationCapacityUtil_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PDNSZ Registration Capacity Utilization Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_DNSZ_Registratio"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Private DNS Zone Registration Capacity Utilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PublicIp_DDoSAttack_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PIP DDoS Attack Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PublicIp_DDoSAtt"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy PIP DDoS Attack Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PublicIp_BytesInDDoSAttack_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PIP Bytes in DDoS Attack Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PublicIp_BytesIn"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy PIP Bytes in DDoS Attack Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PublicIp_PacketsInDDoSAttack_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PIP Packets in DDoS Attack Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PublicIp_Packets"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy PIP Packets in DDoS Attack Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_PublicIp_VIPAvailability_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy PIP VIP Availability Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_PublicIp_VIPAvai"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy PIP VIP Availability Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_RecoveryVault_BackupHealth_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealth_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy RV Backup Health Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_RecoveryVault_Ba"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Recovery Vault Backup Health Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_StorageAccount_Transaction_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Transaction_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy SA Transaction Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_StorageAccount_T"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy SA Transaction Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_StorageAccount_Latency_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Latency_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy SA Latency Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_StorageAccount_L"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy SA Latency Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_StorageAccount_Availability_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy SA Availability Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_StorageAccount_A"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy SA Availability Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_StorageAccount_E2ELatency_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_E2ELatency_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy SA E2E Latency Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_StorageAccount_E"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy SA E2E Latency Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VM_AvailableMemory_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_AvailableMemory_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VM Available Memory Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VM_AvailableMemo"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VM Available Memory Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VNET_PingAvgRoundtrip_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_PingAvgRoundtrip_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNet Ping Avg Roundtrip Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VNET_PingAvgRoun"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Ping Average Roundtrip Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VNET_ProbeFailed_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_ProbeFailed_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNet Probe Failed Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VNET_ProbeFailed"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Probe Failed Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VNET_DDoSAttack_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNet DDoS Attack Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VNET_DDoSAttack_"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network DDoS Attack Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VnetGw_ExpressRouteCpuUtil_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteCpuUtil_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNetG ExpressRoute CPU Utilization Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VnetGw_ExpressRo"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Gateway Express Route CPU Utilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VnetGw_TunnelBandwidth_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelBandwidth_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNetG Tunnel Bandwidth Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VnetGw_TunnelBan"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Bandwidth Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VnetGw_TunnelEgress_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgress_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNetG Tunnel Egress Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VnetGw_TunnelEgr"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Egress Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VnetGw_TunnelIngress_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngress_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VNetG Tunnel Ingress Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VnetGw_TunnelIng"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Gateway Tunnel Ingress Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_BandwidthUtil_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BandwidthUtil_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG  Bandwidth Utilization Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_BandwidthU"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway Bandwidth Utilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_BGPPeerStatus_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BGPPeerStatus_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG  BGP Peer Status Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_BGPPeerSta"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway BGP Peer Status Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_Ingress_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Ingress_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG Ingress Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_Ingress_Al"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway Ingress Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_Egress_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Egress_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG Egress Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_Egress_Ale"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway Egress Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_ERCIR_ArpAvailability_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_ArpAvailability_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy ExpressRoute ArpAvailability Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_ERCIR_ArpAv_Aler"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy ExpressRoute ArpAvailability Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_ERCIR_BgpAvailability_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_BgpAvailability_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy ExpressRoute BgpAvailability Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_ERCIR_BgpAv_Aler"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy ExpressRoute BgpAvailability Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_ERCIR_QosDropBitsInPerSecond_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsInPerSecond_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy ExpressRoute QosDropBitsInPerSecond Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_ERCIR_QosDropIn"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy ExpressRoute QosDropBitsInPerSecond Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_ERCIR_QosDropBitsOutPerSecond_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy ExpressRoute QosDropBitsOutPerSecond Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_ERCIR_QosDropOut"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy ExpressRoute QosDropBitsOutPerSecond Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VNETG_BgpPeerStatus_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy Virtual Network Gateway BgpPeerStatus Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VNETG_BgpPeerSta"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Virtual Network Gateway BgpPeerStatus Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_TunnelEgressPacketDropCount_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropCount_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG TunnelEgressPacketDropCount Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_TunnelEgrC"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway TunnelEgressPacketDropCount Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_TunnelEgressPacketDropMisMatch_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropMisMatch_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG TunnelEgressPacketDropMisMatch Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_TunnelEgrM"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway TunnelEgressPacketDropMisMatch Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_TunnelIngressPacketDropCount_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropCount_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG TunnelIngressPacketDropCount Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_TunnelIngC"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway TunnelIngressPacketDropCount Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy VPNG TunnelIngressPacketDropMismatch Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_VPNGw_TunnelIngM"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy VPN Gateway TunnelIngressPacketDropMismatch Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_AA_TotalJob_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_AA_TotalJob_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy AA TotalJob Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_AA_TotalJob_Aler"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Automation Account Total Job Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_AFW_FirewallHealth_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_FirewallHealth_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy AFW FirewallHealth Alert"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_AFW_FWHealth_Ale"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Azure Firewall FirewallHealth Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Deploy_AFW_SNATPortUtilization_Alert', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_SNATPortUtilization_Alert', parameters('parTargetManagementGroupId'))]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[DINE] Deploy AFW SNATPortUtilization"
          },
          "parPolicyAssignmentName": {
            "value": "Deploy_AFW_SNATPortUtil"
          },
          "parPolicyAssignmentDescription": {
            "value": "DINE policy to audit/deploy Azure Firewall SNAtPortUtilization Alert"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "SystemAssigned"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13114146835547086020"
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy assignment. e.g. \"Deny-Public-IP\""
              },
              "maxLength": 24,
              "minLength": 1
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the policy assignment. e.g. \"Deny the creation of Public IPs\""
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the policy assignment. e.g. \"This policy denies creation of Public IPs under the assigned scope.\""
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "The policy definition ID for the policy to be assigned. e.g. \"/providers/Microsoft.Authorization/policyDefinitions/9d0a794f-1444-4c96-9534-e35fc8c39c91\" or \"/providers/Microsoft.Management/managementgroups/alz/providers/Microsoft.Authorization/policyDefinitions/Deny-Public-IP\""
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing the parameter values for the policy to be assigned. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "An object containing parameter values that override those provided to parPolicyAssignmentParameters, usually via a JSON file and json(loadTextContent(FILE_PATH)). This is only useful when wanting to take values from a source like a JSON file for the majority of the parameters but override specific parameter inputs from other sources or hardcoded. If duplicate parameters exist between parPolicyAssignmentParameters & parPolicyAssignmentParameterOverrides, inputs provided to parPolicyAssignmentParameterOverrides will win. DEFAULT VALUE = {}"
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing object/s for the non-compliance messages for the policy to be assigned. See https://docs.microsoft.com/en-us/azure/governance/policy/concepts/assignment-structure#non-compliance-messages for more details on use. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of scope Resource IDs to be excluded for the policy assignment. e.g. ['/providers/Microsoft.Management/managementgroups/alz', '/providers/Microsoft.Management/managementgroups/alz-sandbox' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The enforcement mode for the policy assignment. See https://aka.ms/EnforcementMode for more details on use. DEAFULT VALUE = \"Default\""
              },
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "metadata": {
                "description": "The type of identity to be created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. DEAFULT VALUE = \"None\""
              },
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of additional Management Group IDs (as the Management Group deployed to is included automatically) that the System-assigned Managed Identity, associated to the policy assignment, will be assigned to additionally. e.g. ['alz', 'alz-sandbox' ]. DEFAULT VALUE = [ <Management Group You Are Deploying To> ]"
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of Subscription IDs that the System-assigned Managed Identity associated to the policy assignment will be assigned to in addition to the Management Group the policy is deployed/assigned to. e.g. ['8200b669-cbc6-4e6c-b6d8-f4797f924074', '7d58dc5d-93dc-43cd-94fc-57da2e74af0d' ]. DEFAULT VALUE = []"
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array containing a list of RBAC role definition IDs to be assigned to the Managed Identity that is created and associated with the policy assignment. Only required for Modify and DeployIfNotExists policy effects. e.g. ['/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c']. DEFAULT VALUE = []"
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set Parameter to true to Opt-out of deployment telemetry"
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            {
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9785942321730670381"
                    }
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of management group scopes that will be used for role assignment (i.e. [alz-platform-connectivity, alz-platform-identity]).  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "5201411598781638599"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(managementGroup().name, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "3923567631355747172"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4855775997007328615"
                    }
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "A list of subscription IDs that will be used for role assignment (i.e. 4f9f8765-911a-4a6d-af60-4bc0473268c0)  Default = []"
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set Parameter to true to Opt-out of deployment telemetry"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "10008045880593911421"
                            }
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "A GUID representing the role assignment name.  Default:  guid(subscription().subscriptionId, parRoleDefinitionId, parAssigneeObjectId)"
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (i.e. GUID, Reader Role Definition ID:  acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type of the assignee.  Allowed values are 'Group' (Security Group) or 'ServicePrincipal' (Service Principal or System/User Assigned Managed Identity)"
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals or managed identities. For managed identities use the principal id. For service principals, use the object ID and not the app ID"
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set Parameter to true to Opt-out of deployment telemetry"
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-10-01-preview",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.4.1272.37030",
                                      "templateHash": "6723816058356903035"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
              ]
            },
            {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "3923567631355747172"
                    }
                  },
                  "resources": []
                }
              }
            }
          ]
        }
      }
    }
  ]
}